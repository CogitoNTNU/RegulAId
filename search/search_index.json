{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#project-template","title":"PROJECT-TEMPLATE","text":"![GitHub Workflow Status (with event)](https://img.shields.io/github/actions/workflow/status/CogitoNTNU/PROJECT-TEMPLATE/ci.yml) ![GitHub top language](https://img.shields.io/github/languages/top/CogitoNTNU/PROJECT-TEMPLATE) ![GitHub language count](https://img.shields.io/github/languages/count/CogitoNTNU/PROJECT-TEMPLATE) [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT) [![Project Version](https://img.shields.io/badge/version-0.0.1-blue)](https://img.shields.io/badge/version-0.0.1-blue)   \ud83d\udccb Table of contents   - [PROJECT-TEMPLATE](#PROJECT-TEMPLATE)   - [Description](#description)   - [\ud83d\udee0\ufe0f Prerequisites](#%EF%B8%8F-prerequisites)   - [Getting started](#getting-started)   - [Usage](#usage)     - [\ud83d\udcd6 Generate Documentation Site](#-generate-documentation-site)   - [Testing](#testing)   - [Team](#team)     - [License](#license)"},{"location":"#description","title":"Description","text":""},{"location":"#prerequisites","title":"\ud83d\udee0\ufe0f Prerequisites","text":"<ul> <li>Git: Ensure that git is installed on your machine. Download Git</li> <li>Python 3.12: Required for the project. Download Python</li> <li>UV: Used for managing Python environments. Install UV</li> <li>Docker (optional): For DevContainer development. Download Docker</li> </ul>"},{"location":"#getting-started","title":"Getting started","text":"<ol> <li>Clone the repository:</li> </ol> <p><code>sh    git clone https://github.com/CogitoNTNU/PROJECT-TEMPLATE.git    cd PROJECT-TEMPLATE</code></p> <ol> <li>Install dependencies:</li> </ol> <p><code>sh    uv sync</code></p> <ol> <li>Set up pre commit (only for development):    <code>sh    uv run pre-commit install</code></li> </ol>"},{"location":"#usage","title":"Usage","text":"<p>To run the project, run the following command from the root directory of the project:</p>"},{"location":"#generate-documentation-site","title":"\ud83d\udcd6 Generate Documentation Site","text":"<p>To build and preview the documentation site locally:</p> <pre><code>uv run mkdocs build\nuv run mkdocs serve\n</code></pre> <p>This will build the documentation and start a local server at http://127.0.0.1:8000/ where you can browse the docs and API reference. Get the documentation according to the lastes commit on main by viewing the <code>gh-pages</code> branch on GitHub: https://cogitontnu.github.io/PROJECT-TEMPLATE/.</p>"},{"location":"#testing","title":"Testing","text":"<p>To run the test suite, run the following command from the root directory of the project:</p> <pre><code>uv run pytest --doctest-modules --cov=src --cov-report=html\n</code></pre>"},{"location":"#team","title":"Team","text":"<p>This project would not have been possible without the hard work and dedication of all of the contributors. Thank you for the time and effort you have put into making this project a reality.</p> <p></p>"},{"location":"#license","title":"License","text":"<p>Distributed under the MIT License. See <code>LICENSE</code> for more information.</p>"},{"location":"reference/src/","title":"src","text":""},{"location":"reference/src/#src","title":"src","text":"<p>Modules:</p> <ul> <li> <code>pdf_to_md</code>           \u2013            </li> </ul>"},{"location":"reference/src/pdf_to_md/","title":"src.pdf_to_md","text":""},{"location":"reference/src/pdf_to_md/#src.pdf_to_md","title":"src.pdf_to_md","text":"<p>Functions:</p> <ul> <li> <code>pdf_to_md</code>             \u2013              <p>Convert PDF to Markdown file.</p> </li> </ul>"},{"location":"reference/src/pdf_to_md/#src.pdf_to_md.pdf_to_md","title":"pdf_to_md","text":"<pre><code>pdf_to_md(pdf_path: str, output_path: str)\n</code></pre> <p>Convert PDF to Markdown file.</p> Source code in <code>src/pdf_to_md.py</code> <pre><code>def pdf_to_md(pdf_path: str, output_path: str):\n    \"\"\"Convert PDF to Markdown file.\"\"\"\n    reader = PdfReader(pdf_path)\n\n    text = \"\"\n    for page in reader.pages:\n        text += page.extract_text() + \"\\n\\n\"\n\n    # Write to markdown file\n    with open(output_path, \"w\", encoding=\"utf-8\") as f:\n        f.write(f\"# {Path(pdf_path).stem}\\n\\n\")\n        f.write(text)\n\n    print(f\"Converted {pdf_path} to {output_path}\")\n</code></pre>"}]}